# Multi-stage production build for AIMS Web Application
# Stage 1: Build the application
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./

# Install dependencies with npm ci for faster, reliable builds
RUN npm ci --only=production --silent

# Copy source code
COPY . .

# Build the application for production
ENV NODE_ENV=production
RUN npm run build

# Stage 2: Production runtime
FROM nginx:alpine AS production

# Install security updates
RUN apk update && apk upgrade && apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S webapp -u 1001 -G nodejs

# Copy built application from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/default.conf /etc/nginx/conf.d/default.conf

# Copy security headers configuration
COPY docker/security-headers.conf /etc/nginx/conf.d/security-headers.conf

# Create necessary directories and set permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run \
    && chown -R webapp:nodejs /var/cache/nginx /var/log/nginx /var/run \
    && chown -R webapp:nodejs /usr/share/nginx/html

# Switch to non-root user
USER webapp

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["/usr/bin/dumb-init", "--"]

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# Labels for better image management
LABEL maintainer="AIMS Development Team" \
      version="1.0.0" \
      description="AIMS Web Application - Production Build" \
      org.opencontainers.image.title="AIMS Web App" \
      org.opencontainers.image.description="Production-ready AIMS e-commerce web application" \
      org.opencontainers.image.vendor="AIMS Corporation" \
      org.opencontainers.image.version="1.0.0"