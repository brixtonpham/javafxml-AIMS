# AIMS Security Headers Configuration
# Comprehensive security headers for production deployment

# Prevent clickjacking attacks
add_header X-Frame-Options "DENY" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Enable XSS protection
add_header X-XSS-Protection "1; mode=block" always;

# Referrer policy for privacy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions policy (formerly Feature Policy)
add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;

# Content Security Policy (CSP)
# Note: Adjust this policy based on your specific needs and third-party integrations
add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://www.googletagmanager.com;
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
    font-src 'self' https://fonts.gstatic.com;
    img-src 'self' data: https: blob:;
    connect-src 'self' https://api.aims.com https://www.google-analytics.com;
    frame-src 'none';
    object-src 'none';
    base-uri 'self';
    form-action 'self';
    frame-ancestors 'none';
    upgrade-insecure-requests;
" always;

# HSTS (HTTP Strict Transport Security)
# Force HTTPS for 1 year, include subdomains, and allow preloading
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Expect-CT header for Certificate Transparency
add_header Expect-CT "max-age=86400, enforce" always;

# Cross-Origin Resource Policy
add_header Cross-Origin-Resource-Policy "cross-origin" always;

# Cross-Origin Embedder Policy
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Cross-Origin Opener Policy
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Server information hiding
add_header Server "AIMS-Web" always;

# Cache control for security
add_header Cache-Control "no-cache, no-store, must-revalidate" always;

# Additional security headers for specific file types
location ~* \.(html|htm)$ {
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# Security headers for API responses
location /api/ {
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
}

# Remove sensitive headers that might leak information
more_clear_headers 'X-Powered-By';
more_clear_headers 'Server';
more_clear_headers 'X-AspNet-Version';
more_clear_headers 'X-AspNetMvc-Version';