#!/bin/bash
# setup_test_db.sh
# Script ƒë·ªÉ kh·ªüi t·∫°o v√† chu·∫©n b·ªã database test

echo "üîß Chu·∫©n b·ªã AIMS Test Database..."

# ƒê∆∞·ªùng d·∫´n t·ªõi c√°c file
PROJECT_ROOT="/home/namu10x/Desktop/AIMS_Project"
TEST_DB="$PROJECT_ROOT/src/test/resources/aims_test.db"
MAIN_DB="$PROJECT_ROOT/target/classes/aims_database.db"
SCHEMA_SCRIPT="$PROJECT_ROOT/src/main/java/com/aims/core/infrastructure/database/scripts/V1__create_tables.sql"
SEED_SCRIPT="$PROJECT_ROOT/src/test/resources/test_data/seed_data.sql"

# Ki·ªÉm tra c√°c file c·∫ßn thi·∫øt
if [ ! -f "$MAIN_DB" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y database ch√≠nh: $MAIN_DB"
    echo "   Vui l√≤ng build project tr∆∞·ªõc: mvn compile"
    exit 1
fi

if [ ! -f "$SCHEMA_SCRIPT" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y schema script: $SCHEMA_SCRIPT"
    exit 1
fi

# T·∫°o th∆∞ m·ª•c test resources n·∫øu ch∆∞a c√≥
mkdir -p "$(dirname "$TEST_DB")"
mkdir -p "$PROJECT_ROOT/src/test/resources/test_data"

# Sao ch√©p database ch√≠nh th√†nh database test
echo "üìã Sao ch√©p database ch√≠nh th√†nh aims_test.db..."
cp "$MAIN_DB" "$TEST_DB"

# X√≥a t·∫•t c·∫£ d·ªØ li·ªáu hi·ªán c√≥ v√† t·∫°o l·∫°i schema
echo "üóëÔ∏è  X√≥a d·ªØ li·ªáu c≈© v√† t·∫°o l·∫°i schema..."
sqlite3 "$TEST_DB" "
    PRAGMA foreign_keys = OFF;
    
    -- L·∫•y danh s√°ch t·∫•t c·∫£ c√°c b·∫£ng
    SELECT 'DROP TABLE IF EXISTS ' || name || ';' 
    FROM sqlite_master 
    WHERE type='table' AND name != 'sqlite_sequence';
" | sqlite3 "$TEST_DB"

# T·∫°o l·∫°i schema t·ª´ script
echo "üèóÔ∏è  T·∫°o l·∫°i c·∫•u tr√∫c b·∫£ng..."
sqlite3 "$TEST_DB" < "$SCHEMA_SCRIPT"

# Seed d·ªØ li·ªáu m·∫´u n·∫øu c√≥
if [ -f "$SEED_SCRIPT" ]; then
    echo "üå± Seed d·ªØ li·ªáu m·∫´u..."
    sqlite3 "$TEST_DB" < "$SEED_SCRIPT"
else
    echo "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y seed script, b·ªè qua seed data"
fi

# Seed comprehensive test data t·ª´ V2__seed_test_data.sql
COMPREHENSIVE_SEED="$PROJECT_ROOT/src/test/resources/test_data/V2__seed_test_data.sql"
if [ -f "$COMPREHENSIVE_SEED" ]; then
    echo "üå± Seed d·ªØ li·ªáu test comprehensive..."
    sqlite3 "$TEST_DB" < "$COMPREHENSIVE_SEED"
else
    echo "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y comprehensive seed script"
fi

# Ki·ªÉm tra k·∫øt qu·∫£
echo "‚úÖ Ki·ªÉm tra database test..."
TABLE_COUNT=$(sqlite3 "$TEST_DB" "SELECT COUNT(*) FROM sqlite_master WHERE type='table';")
echo "   S·ªë b·∫£ng ƒë√£ t·∫°o: $TABLE_COUNT"

if [ "$TABLE_COUNT" -gt 0 ]; then
    echo "üéâ Database test ƒë√£ ƒë∆∞·ª£c chu·∫©n b·ªã th√†nh c√¥ng!"
    echo "   Database path: $TEST_DB"
    echo ""
    echo "üìä Danh s√°ch b·∫£ng:"
    sqlite3 "$TEST_DB" "SELECT '  - ' || name FROM sqlite_master WHERE type='table' ORDER BY name;"
    echo ""
    echo "üîç Ki·ªÉm tra d·ªØ li·ªáu m·∫´u:"
    USER_COUNT=$(sqlite3 "$TEST_DB" "SELECT COUNT(*) FROM USER_ACCOUNT;" 2>/dev/null || echo "0")
    PRODUCT_COUNT=$(sqlite3 "$TEST_DB" "SELECT COUNT(*) FROM PRODUCT;" 2>/dev/null || echo "0")
    echo "   - Users: $USER_COUNT"
    echo "   - Products: $PRODUCT_COUNT"
else
    echo "‚ùå C√≥ l·ªói khi t·∫°o database test"
    exit 1
fi
